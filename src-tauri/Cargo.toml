[package]
name = "chaosdanmutool"
version = "0.10.0"
description = "A tool for process/view Danmu on bilibili"
authors = ["Golden_Water"]
license = "AGPL-3.0-only"
repository = "https://github.com/BiliGoldenWater/ChaosDanmuTool.git"
default-run = "chaosdanmutool"
edition = "2021"
rust-version = "1.57"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "1.0.4", features = [] }
embed-resource = "1.7.3"

[dependencies]
serde_json = "1.0.82"
serde = { version = "1.0.140", features = ["derive"] }
# live template: sddfc (serde default define & function - config)
#
# #[serde(default = "$fieldName$_default")]
# #[serde(skip_serializing_if = "$skipFunctionName$")]
# // region $fieldName$
# fn $defaultFunctionName$() -> $typeName$ {
#   $defaultValue$
# }
# 
# fn $skipFunctionName$(value: &$typeName$) -> bool {
#   *value == $defaultFunctionName$() && *ALLOW_CONFIG_SKIP_IF.read().unwrap()
# }
# //ednregion
#
# live template: seo (serde empty object)
# serde_json::from_str("{}").unwrap()
tauri = { version = "1.0.5", features = ["macos-private-api", "updater", "window-start-dragging"] }
window-vibrancy = "0.2.0"
window-shadows = "0.2.0"
raw-window-handle = "0.5.0"
futures-util = "0.3.21"
tokio = { version = "1.20.0", features = ["full"] }
tokio-tungstenite = { version = "0.17.2", features = ["native-tls"] }
hyper = { version = "0.14.20", features = ["http1", "http2", "server"] }
reqwest = { version = "0.11.11", features = ["blocking", "native-tls"] }
oneshot = "0.1.3"
bytes = "1.2.0"
brotli = "3.3.4"
uuid = { version = "1.1.2", features = ["v4", "fast-rng", "macro-diagnostics"] }
lazy_static = "1.4.0"
rfd = { version = "0.10.0", features = ["common-controls-v6"] }
chrono = "0.4.19"
netstat2 = "0.9.1"
get-port = "4.0.0"
sysinfo = "0.25.0"
async-recursion = "1.0.0"
ts-rs = "6.2.0"
# live template: tss
# #[derive(serde::Serialize, serde::Deserialize, ts_rs::TS, PartialEq, Debug, Clone)]
# #[serde(rename_all = "camelCase")]
# #[ts(export, export_to = "../src/share/type/rust/$PATH$")]
# pub struct $NAME$ {
#   $END$
# }
#
# live template: atss
# #[derive(serde::Serialize, serde::Deserialize, ts_rs::TS, PartialEq, Debug, Clone)]
# #[serde(rename_all = "camelCase")]
# #[ts(export, export_to = "../src/share/type/rust/$PATH$")]

[target.'cfg(target_os = "macos")'.dependencies]
cocoa = "0.24.0"
objc = "0.2.7"
MacTypes-sys = "2.1.0"
libc = "0.2.129"

[features]
# by default Tauri runs in production mode
# when `tauri dev` runs it is executed with `cargo run --no-default-features` if `devPath` is an URL
default = ["custom-protocol"]
# this feature is used used for production builds where `devPath` points to the filesystem
# DO NOT remove this
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
panic = "abort" # Strip expensive panic clean-up logic
codegen-units = 1 # Compile crates one after another so the compiler can optimize better
lto = true # Enables link to optimizations
opt-level = "s" # Optimize for binary size
strip = true  # Automatically strip symbols from the binary.

[patch.crates-io]
tauri = { git = "https://github.com/BiliGoldenWater/tauri.git" }
tao = { git = "https://github.com/BiliGoldenWater/tao.git" }
